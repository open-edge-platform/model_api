name: test_precommit
permissions: {} # No permissions by default on workflow level
on:
  pull_request:
  merge_group:
    branches:
      - master
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  Python-Functional-Tests:
    runs-on: ubuntu-22.04
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.9
          cache: pip
      - name: Create and start a virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install src/python/[tests,ovms] --extra-index-url https://download.pytorch.org/whl/cpu
      - name: Prepare test data
        run: |
          source venv/bin/activate
          python tests/cpp/precommit/prepare_data.py -d data -p tests/cpp/precommit/public_scope.json
      - name: Run test
        run: |
          source venv/bin/activate
          pytest --data=./data tests/python/functional
  CPP-Code-Quality:
    name: CPP-Code-Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: cppcheck
        uses: chmorgan/cppcheck-action@88696b3fd4a3ced3df76a2f7dc44b251d8232bcb # v1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          # missingInclude: cppcheck can't find stl, openvino, opencv
          other_options: --suppress=missingInclude -Isrc/cpp/models/include -Isrc/cpp/utils/include -Isrc/cpp/pipelines/include --check-config
  serving_api:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        python-version: [3.9, "3.10", "3.11"]
        exclude:
          - os: ubuntu-24.04
            python-version: "3.9"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up docker for macOS
        if: startsWith(matrix.os, 'macos-1')
        run: |
          brew install colima docker
          colima start
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: serving_api
        run: |
          python -m pip install --upgrade pip
          python -m pip install src/python/[ovms,tests]
          python tests/cpp/precommit/prepare_data.py -d data -p tests/cpp/precommit/public_scope.json
          python -c "from model_api.models import DetectionModel; DetectionModel.create_model('./data/otx_models/detection_model_with_xai_head.xml').save('ovms_models/ssd_mobilenet_v1_fpn_coco/1/ssd_mobilenet_v1_fpn_coco.xml')"
          docker run -d --rm -v $GITHUB_WORKSPACE/ovms_models/:/models -p 8000:8000 openvino/model_server:latest --model_path /models/ssd_mobilenet_v1_fpn_coco/ --model_name ssd_mobilenet_v1_fpn_coco --rest_port 8000 --log_level DEBUG --target_device CPU
          python examples/python/serving_api/run.py data/coco128/images/train2017/000000000009.jpg  # detects 4 objects
