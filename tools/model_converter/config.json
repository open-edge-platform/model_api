{
  "models": [
    {
      "model_short_name": "mobilenet_v3_small",
      "model_class_name": "torchvision.models.mobilenetv3.mobilenet_v3_small",
      "model_full_name": "MobileNetV3-Small",
      "description": "MobileNetV3 Small - Efficient convolutional neural network for mobile and embedded vision applications",
      "docs": "https://docs.pytorch.org/vision/main/models/generated/torchvision.models.mobilenet_v3_small.html#torchvision.models.mobilenet_v3_small",
      "weights_url": "https://download.pytorch.org/models/mobilenet_v3_small-047dcff4.pth",
      "input_shape": [1, 3, 224, 224],
      "input_names": ["image"],
      "output_names": ["output1"],
      "model_params": null,
      "model_type": "Classification",
      "reverse_input_channels": false,
      "mean_values": "123.675 116.28 103.53",
      "scale_values": "58.395 57.12 57.375",
      "labels": "IMAGENET1K_V1"
    },
    {
      "model_short_name": "efficientnet_b0",
      "model_class_name": "torchvision.models.efficientnet.efficientnet_b0",
      "model_full_name": "EfficientNet-B0",
      "description": "EfficientNet-B0 - Efficient convolutional neural network with compound scaling",
      "docs": "https://docs.pytorch.org/vision/main/models/generated/torchvision.models.efficientnet_b0.html#torchvision.models.efficientnet_b0",
      "weights_url": "https://download.pytorch.org/models/efficientnet_b0_rwightman-3dd342df.pth",
      "input_shape": [1, 3, 224, 224],
      "input_names": ["image"],
      "output_names": ["logits"],
      "model_params": null,
      "model_type": "Classification",
      "reverse_input_channels": true,
      "mean_values": "123.675 116.28 103.53",
      "scale_values": "58.395 57.12 57.375",
      "labels": "IMAGENET1K_V1"
    },
    {
      "model_short_name": "resnet18",
      "model_class_name": "torchvision.models.resnet.resnet18",
      "model_full_name": "ResNet-18",
      "description": "ResNet-18 - 18-layer residual learning network for image classification",
      "weights_url": "https://download.pytorch.org/models/resnet18-f37072fd.pth",
      "input_shape": [1, 3, 224, 224],
      "input_names": ["image"],
      "output_names": ["output"],
      "model_params": null,
      "model_type": "Classification",
      "reverse_input_channels": true,
      "mean_values": "123.675 116.28 103.53",
      "scale_values": "58.395 57.12 57.375",
      "labels": "IMAGENET1K_V1"
    },
    {
      "model_short_name": "resnet50",
      "model_class_name": "torchvision.models.resnet.resnet50",
      "model_full_name": "ResNet-50",
      "description": "ResNet-50 - 50-layer residual learning network for image classification",
      "weights_url": "https://download.pytorch.org/models/resnet50-0676ba61.pth",
      "input_shape": [1, 3, 224, 224],
      "input_names": ["image"],
      "output_names": ["output"],
      "model_params": null,
      "model_type": "Classification",
      "reverse_input_channels": true,
      "mean_values": "123.675 116.28 103.53",
      "scale_values": "58.395 57.12 57.375",
      "labels": "IMAGENET1K_V1"
    },
    {
      "model_short_name": "squeezenet1_0",
      "model_class_name": "torchvision.models.squeezenet.squeezenet1_0",
      "model_full_name": "SqueezeNet 1.0",
      "description": "SqueezeNet 1.0 - Small CNN with AlexNet-level accuracy and 50x fewer parameters",
      "weights_url": "https://download.pytorch.org/models/squeezenet1_0-b66bff10.pth",
      "input_shape": [1, 3, 224, 224],
      "input_names": ["image"],
      "output_names": ["output"],
      "model_params": null,
      "model_type": "Classification",
      "reverse_input_channels": true,
      "mean_values": "123.675 116.28 103.53",
      "scale_values": "58.395 57.12 57.375",
      "labels": "IMAGENET1K_V1"
    },
    {
      "model_short_name": "vgg16",
      "model_class_name": "torchvision.models.vgg.vgg16",
      "model_full_name": "VGG-16",
      "description": "VGG-16 - 16-layer deep convolutional network",
      "weights_url": "https://download.pytorch.org/models/vgg16-397923af.pth",
      "input_shape": [1, 3, 224, 224],
      "input_names": ["image"],
      "output_names": ["output"],
      "model_params": null,
      "model_type": "Classification",
      "reverse_input_channels": true,
      "mean_values": "123.675 116.28 103.53",
      "scale_values": "58.395 57.12 57.375",
      "labels": "IMAGENET1K_V1"
    }
  ]
}
